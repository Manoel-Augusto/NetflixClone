[{"C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\index.js":"1","C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\App.js":"2","C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\Tmdb.js":"3","C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\components\\FeaturedMovie\\index.js":"4","C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\components\\MovieRow\\index.js":"5","C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\components\\Header\\index.js":"6"},{"size":199,"mtime":1611339509054,"results":"7","hashOfConfig":"8"},{"size":1594,"mtime":1611960335885,"results":"9","hashOfConfig":"8"},{"size":2771,"mtime":1611868497461,"results":"10","hashOfConfig":"8"},{"size":1702,"mtime":1611956165594,"results":"11","hashOfConfig":"8"},{"size":702,"mtime":1611956374625,"results":"12","hashOfConfig":"8"},{"size":660,"mtime":1611959592547,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"12jvavy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\index.js",[],["31","32"],"C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\App.js",["33"],"C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\Tmdb.js",["34"],"const API_KEY = 'cf7e4685aecedd9c40538f30cb7a197a';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/*\r\n-originais da netflix\r\n-recomendados(trending)\r\n-em alta(top rated)\r\n-ação\r\n-comedia\r\n-terror\r\n-romance\r\n-documentários\r\n*/\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const Json = await req.json();\r\n    return Json;\r\n}\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netfilx',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?witch_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?witch_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?witch_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?witch_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'Documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?witch_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ];\r\n    },\r\n     getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if (movieId) {\r\n            switch (type) {\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                    break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                    break;\r\n                    default:\r\n                        info=null;\r\n                        break;\r\n\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n}","C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\components\\FeaturedMovie\\index.js",["35"],"import React from 'react';\r\nimport '../FeaturedMovie/index.css'\r\nexport default ({item})=>{\r\n    console.log(item);\r\n\r\n    let firstDate= new Date(item.first_air_date);\r\n    let genres=[];\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    return(\r\n        <section className=\"featured\" style={{\r\n            backgroundSize:'cover',\r\n            backgroundPosition:'center',\r\n            backgroundImage:`url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    \r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                    <div className=\"featured--points\">{item.vote_average} pontos</div>    \r\n                    <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                    <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons!==1?'s':''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{item.overview}</div>   \r\n                    <div className=\"fuatured--buttons\">\r\n                    <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">&#9654; Assistir</a>\r\n                    <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"> <strong>Gêneros:</strong> {genres.join(', ')}</div>                 \r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}","C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\components\\MovieRow\\index.js",["36"],"import React from 'react';\r\nimport '../MovieRow/index.css';\r\n\r\nexport default ({ title, items }) => {\r\n    return (\r\n\r\n\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className='movieRow--listarea'>\r\n\r\n                <div className=\"movieRow--list\">\r\n                    {items.results.length > 0 && items.results.map((item, key) => (\r\n\r\n                        <div key={key} className=\"movieRow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                        </div>\r\n\r\n                    ))}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}","C:\\Users\\manoe\\Desktop\\Projetos\\netflixclone\\src\\components\\Header\\index.js",["37","38"],"import react from 'react';\r\nimport '../Header/index.css'\r\n\r\nexport default ({black})=>{\r\n    return(\r\n        <header className={black?'black':''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\" alt=\"Netflix\"></img>\r\n                </a>\r\n            </div>\r\n\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Usuário\"/>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":8,"column":1,"nodeType":"45","endLine":61,"endColumn":2},{"ruleId":"43","severity":1,"message":"46","line":20,"column":1,"nodeType":"45","endLine":84,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":3,"column":1,"nodeType":"45","endLine":38,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":4,"column":1,"nodeType":"45","endLine":28,"endColumn":2},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":4,"column":1,"nodeType":"45","endLine":20,"endColumn":2},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]